# Generated by Django 5.2 on 2025-04-08 19:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Bunker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                ("funcao", models.CharField(default=False, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Doenca",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                ("origem", models.TextField(blank=True)),
                ("contagiosa", models.BooleanField(default=False)),
                (
                    "forma_contagio",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "parte_afetada",
                    models.CharField(
                        choices=[
                            ("CAB", "Cabeça"),
                            ("COR", "Coração"),
                            ("PUL", "Pulmões"),
                            ("EST", "Estômago"),
                            ("PEL", "Pele"),
                            ("OSS", "Ossos"),
                            ("MEN", "Mente"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[("F", "Física"), ("M", "Mental"), ("B", "Ambas")],
                        max_length=1,
                    ),
                ),
                (
                    "tratamento",
                    models.TextField(
                        blank=True, help_text="Protocolo de tratamento recomendado"
                    ),
                ),
                (
                    "reacoes_esperadas",
                    models.TextField(
                        blank=True, help_text="Reações esperadas ao tratamento"
                    ),
                ),
            ],
            options={
                "verbose_name": "Doença",
                "verbose_name_plural": "Doenças",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Sintoma",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                (
                    "tipo",
                    models.CharField(
                        choices=[("F", "Físico"), ("M", "Mental")], max_length=1
                    ),
                ),
                ("descricao", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["tipo", "nome"],
            },
        ),
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("nickname", models.CharField(max_length=100)),
                (
                    "tipo",
                    models.CharField(
                        choices=[("MED", "Médico"), ("OUT", "Outro")],
                        default="OUT",
                        max_length=3,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "bunker",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.bunker",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Diagnostico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sintomas", models.TextField(blank=True)),
                ("observacoes", models.TextField(blank=True)),
                ("data", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "responsavel",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "doenca",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.doenca",
                    ),
                ),
                (
                    "hipoteses",
                    models.ManyToManyField(
                        blank=True,
                        related_name="diagnosticos_hipotese",
                        to="core.doenca",
                    ),
                ),
            ],
            options={
                "ordering": ["-data"],
            },
        ),
        migrations.CreateModel(
            name="Besta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                ("titulo", models.CharField(blank=True, max_length=200)),
                (
                    "imagem",
                    models.ImageField(blank=True, null=True, upload_to="bestas/"),
                ),
                (
                    "nivel_ameaca",
                    models.CharField(
                        choices=[
                            ("01", "1/10"),
                            ("02", "2/10"),
                            ("03", "3/10"),
                            ("04", "4/10"),
                            ("05", "5/10"),
                            ("06", "6/10"),
                            ("07", "7/10"),
                            ("08", "8/10"),
                            ("09", "9/10"),
                            ("10", "10/10"),
                        ],
                        default="01",
                        max_length=2,
                    ),
                ),
                ("aparencia", models.TextField()),
                ("habilidades", models.TextField()),
                ("anotacoes", models.TextField(blank=True)),
                (
                    "doenca_relacionada",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="bestas",
                        to="core.doenca",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Paciente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                ("idade", models.PositiveIntegerField(verbose_name="Idade")),
                (
                    "tipo_sanguineo",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A+", "A+"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B-", "B-"),
                            ("AB+", "AB+"),
                            ("AB-", "AB-"),
                            ("O+", "O+"),
                            ("O-", "O-"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ESTAVEL", "Estável"),
                            ("TRATAMENTO", "Em Tratamento"),
                            ("CRONICO", "Tratamento Crônico"),
                            ("OBITO", "Óbito"),
                        ],
                        default="ESTAVEL",
                        max_length=10,
                    ),
                ),
                ("observacoes", models.TextField(blank=True)),
                (
                    "bunker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pacientes",
                        to="core.bunker",
                    ),
                ),
                (
                    "doencas",
                    models.ManyToManyField(
                        related_name="pacientes",
                        through="core.Diagnostico",
                        to="core.doenca",
                    ),
                ),
                (
                    "sintomas_observados",
                    models.ManyToManyField(blank=True, to="core.sintoma"),
                ),
            ],
            options={
                "verbose_name_plural": "Pacientes",
                "ordering": ["bunker__nome", "nome"],
            },
        ),
        migrations.AddField(
            model_name="diagnostico",
            name="paciente",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.paciente"
            ),
        ),
        migrations.CreateModel(
            name="Postagem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titulo", models.CharField(max_length=200)),
                ("descricao", models.TextField()),
                ("data", models.DateTimeField(auto_now_add=True)),
                (
                    "imagem",
                    models.ImageField(blank=True, null=True, upload_to="postagens/"),
                ),
                (
                    "autor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-data"],
            },
        ),
        migrations.CreateModel(
            name="Comentario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("texto", models.TextField()),
                ("data", models.DateTimeField(auto_now_add=True)),
                (
                    "autor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "postagem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comentarios",
                        to="core.postagem",
                    ),
                ),
            ],
            options={
                "ordering": ["data"],
            },
        ),
        migrations.CreateModel(
            name="RegistroMedico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.DateTimeField(auto_now_add=True)),
                (
                    "sintomas_observados",
                    models.TextField(
                        help_text="Descrição detalhada dos sintomas observados"
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(
                        blank=True, help_text="Anotações adicionais sobre o diagnóstico"
                    ),
                ),
                (
                    "tratamento_aplicado",
                    models.TextField(blank=True, help_text="Tratamento aplicado"),
                ),
                (
                    "doenca",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.doenca",
                    ),
                ),
                (
                    "paciente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registros",
                        to="core.paciente",
                    ),
                ),
            ],
            options={
                "verbose_name": "Registro Médico",
                "verbose_name_plural": "Registros Médicos",
                "ordering": ["-data"],
            },
        ),
        migrations.CreateModel(
            name="RelatorioExpedicao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titulo", models.CharField(max_length=200)),
                ("localizacao", models.CharField(max_length=200)),
                ("data", models.DateTimeField(auto_now_add=True)),
                ("descobertas", models.TextField()),
                ("observacoes", models.TextField(blank=True)),
                (
                    "autor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-data"],
            },
        ),
        migrations.AddField(
            model_name="doenca",
            name="sintomas",
            field=models.ManyToManyField(to="core.sintoma"),
        ),
    ]
